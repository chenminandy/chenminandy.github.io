<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bigmin&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bigmin.top/"/>
  <updated>2018-09-17T09:15:45.509Z</updated>
  <id>https://bigmin.top/</id>
  
  <author>
    <name>Bigmin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>扯谈 git reset</title>
    <link href="https://bigmin.top/2018/09/15/%E6%89%AF%E8%B0%88git-reset/"/>
    <id>https://bigmin.top/2018/09/15/扯谈git-reset/</id>
    <published>2018-09-15T11:29:59.000Z</published>
    <updated>2018-09-17T09:15:45.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>前两天有同事跑过来说他在idea里的git reset方式，有的时候可以，有的时候不可以。不可以的时候经常会多出一些不是他自身希望reverse的代码。。。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="idea-与-git-结合"><a href="#idea-与-git-结合" class="headerlink" title="idea 与 git 结合"></a>idea 与 git 结合</h3><p>目前idea与git已经结合的非常好了，一些常用的操作既可以通过图形化界面来操作，也可以在terminal里敲git命令来实现。接下来要介绍的是idea的<strong>Version Control</strong>面板：<br><a id="more"></a></p><p><img src="/images/20180915/version-control.png" alt="Version Control 面板"></p><p>面板上其他tab不介绍了，主要介绍<strong>Log</strong>。这面板可以查看所有分支的commit log记录，不仅仅是本地的branch，远程的分支也可以。面板的上一栏主要是一些筛选和查询条件，经常用的就是<strong>Branch:</strong>和<strong>User:</strong>。在上面背景描述的同事就是没有选择Branch，直接找到了自己本身的commit id，然后就reset了，这样的话就把所有分支都reset到这个时间点了，所以就会有其他代码被reverse了。</p><p>其实针对同事的需求，git有一种更加的方式，git revert。它可以回滚上一次或是指定commit id的代码，并且作为一次提交，生成新的commit id，这样能保证版本是递增的。而git reset其实是将commit id给回滚，将历史给抹灭了~ 而且如果是已经push到远程仓库的代码，需要有force push权限才能将仓库代码更新，但往往force push是被disable的。</p><h3 id="git-reset-介绍"><a href="#git-reset-介绍" class="headerlink" title="git reset 介绍"></a>git reset 介绍</h3><p>在图形化操作git reset的时候，发现它提供了好几个选项，我们来着重介绍下各个选项的不同。</p><p><img src="/images/20180915/git-reset.png" alt="git reset options"></p><p>对于后面两个<strong>Hard</strong>、<strong>Keep</strong>，从他们后面的解释能明白，会直接revert到所指定的commit id那一点，<strong>Hard</strong>是所有的改动都会丢失，而<strong>Keep</strong>仅会保留本地的修改记录(local changes will be kept intact)。主要来关注下面两个选项</p><ul><li><strong>Soft</strong>：Files won‘t change, difference will be staged for commit.</li><li><strong>Mixed</strong>: Default. Files won’t change, difference won’t be staged.</li></ul><p>很多人会发现操作了上述两个操作，对于操作的结果似乎是一样的，没有什么区别。但从描述上来看发现对stage是不一样的。那么stage又是一个什么呢？我们需要简单的整理下：</p><p>git中的文件在本地仓库其实存在三种不同的位置，看下面的图：</p><p><img src="/images/20180916/worktree.png" alt="git working tree/index/commit"> </p><ul><li><strong>工作区</strong>：可以称为working tree或是working copy。我们在IDea中修改或是添加一个文件，working tree的内容都发生了改变。</li><li><strong>暂存区</strong>：可以称为index或是stage。而暂存区是连接工作区和分支的桥梁，当我们使用命令git-add，暂存区的内容就变了，此时暂存区和工作区是同步的。</li><li><strong>分支</strong>：可以称为branch或是commit、HEAD。只有commit了，我们的代码才真正进入了git仓库。而且我们使用git-commit命令其实就是将暂存区的内容给提交到commit中。</li></ul><p>然后再了解<strong>参考文献1</strong>中的不同参数的效果，得出的结论是soft将commit给reset了，index和working tree还是同步的；</p><p><img src="/images/20180916/git-soft.png" alt="git reset --soft"></p><p>而mixed是将commit和index给reset了，commit和index保持一致，与working tree不一致。</p><p><img src="/images/20180916/git-mixed.png" alt="git reset --mixed"></p><p>可能看图还是不太理解具体的含义，我们分update的文件和new add的文件来阐述，利用了git diff命令来查看不同工作位置之间的区别。(git diff用途可以看<strong>参考文献2</strong>）</p><ul><li>update的文件：update的文件表示之前已经add到暂存区。此时如果git reset –mixed则会把暂存区的文件改动也会回退，保留了工作区的文件改动；而用了git reset –soft的话，会保留和暂存区和工作区的改动。但对于IDea的显示都是一样的, 在local changes中都是有改动的代码。但我们通过git diff 和git diff –cached是能看出他们的区别。如下例：<br>我们选择这个节点来reset：<br><img src="/images/20180916/git-reset-example1.png" alt="choose one commit to reset"><br>先选择soft来reset：<br><img src="/images/20180916/git-reset-example2.png" alt="choose sfot"><br>然后再terminal tab页使用git diff命令(查看working tree和index的区别)：<br><img src="/images/20180916/git-reset-nodiff.png" alt=" no diff"><br>在用git diff –cached命令查看(查看index file与commit的差别):<br><img src="/images/20180916/git-reset-changes.png" alt="changes"></li></ul><p>我们将代码恢复到reset前，再选择mixed来reset：<br><img src="/images/20180916/git-reset-example3.png" alt="choose mixed"><br>然后再terminal tab页使用git diff命令, 发现跟之前的不一样了，是下面的结果：<br><img src="/images/20180916/git-reset-changes.png" alt="changes"><br>用git diff –cached：<br><img src="/images/20180916/git-reset-nodiff.png" alt=" no diff"></p><p>这刚好印证了<strong>参考文献1</strong>中的两幅图。</p><ul><li>new add的文件：此类文件更能反映出soft和mixed区别，直接在IDea的local changes就能发现。如果是选择soft的，则新加的文件还是被git add过，是已经“Add to VCS”；但如果选择mixed，会发现新加的文件没有被git add，是提示需要你重新去 “Add to VCS”。此类文件就不在做详细描述，具体操作一下便知。</li></ul><p>GIT虽然只是个简单的源码版本控制工具，但要真正理解，掌握它并不简单。授之以鱼不如授之以渔，且行且珍惜~~~</p><h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><ol><li><a href="https://blog.csdn.net/caomiao2006/article/details/40265027" target="_blank" rel="noopener">【转】git reset 之 soft mixed hard选项的区别</a></li><li><a href="https://blog.csdn.net/w6028819321/article/details/19403533" target="_blank" rel="noopener">git diff 、git diff –cached 、git diff HEAD区别</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h2&gt;&lt;p&gt;前两天有同事跑过来说他在idea里的git reset方式，有的时候可以，有的时候不可以。不可以的时候经常会多出一些不是他自身希望reverse的代码。。。&lt;/p&gt;
&lt;h2 id=&quot;Solution&quot;&gt;&lt;a href=&quot;#Solution&quot; class=&quot;headerlink&quot; title=&quot;Solution&quot;&gt;&lt;/a&gt;Solution&lt;/h2&gt;&lt;h3 id=&quot;idea-与-git-结合&quot;&gt;&lt;a href=&quot;#idea-与-git-结合&quot; class=&quot;headerlink&quot; title=&quot;idea 与 git 结合&quot;&gt;&lt;/a&gt;idea 与 git 结合&lt;/h3&gt;&lt;p&gt;目前idea与git已经结合的非常好了，一些常用的操作既可以通过图形化界面来操作，也可以在terminal里敲git命令来实现。接下来要介绍的是idea的&lt;strong&gt;Version Control&lt;/strong&gt;面板：&lt;br&gt;
    
    </summary>
    
      <category term="Source Control" scheme="https://bigmin.top/categories/Source-Control/"/>
    
    
      <category term="git" scheme="https://bigmin.top/tags/git/"/>
    
      <category term="git-reset" scheme="https://bigmin.top/tags/git-reset/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://bigmin.top/2018/09/15/hello-world/"/>
    <id>https://bigmin.top/2018/09/15/hello-world/</id>
    <published>2018-09-15T09:27:35.859Z</published>
    <updated>2018-09-15T09:27:35.859Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://bigmin.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://bigmin.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>first page</title>
    <link href="https://bigmin.top/2018/09/15/first-page/"/>
    <id>https://bigmin.top/2018/09/15/first-page/</id>
    <published>2018-09-15T08:05:19.000Z</published>
    <updated>2018-09-17T09:21:18.029Z</updated>
    
    <content type="html"><![CDATA[<h2 id="扯扯"><a href="#扯扯" class="headerlink" title="扯扯"></a>扯扯</h2><p>弄Hexo博客好久，一开始为了折腾theme，看了不下几十个theme的风格，但后面弄了一个半成品放到了github上，结果在我后面重整的时候，一个rm -rf直接干掉了~ 正所谓，不破不立，就网上选取了一篇非常详细的文章 <a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">WenBo丨星空灬</a>。十分感谢，让我坚定地走出了第一步。Anyway，on the way~~~</p><p>这篇正如我标题一样，first page，但作为一个码农，怎能去除Hello World的介绍，因此我也就保留了下来，也不让我这<strong>“first page”</strong>如此的孤单。</p><a id="more"></a><p>回归正题，这篇还是简单的记录下我搭建hexo的一些心路历程。一开始就在盲目的找自己喜欢的theme，甚至还去比较了哪些theme的github的clone次数，可能跟我离9月的那个星座比较近有关。后面比较来比较去还是决定采用NexT的风格，找到了一个文档比较详细的网址：<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">theme-next.iissnan.com</a> 再后面发现这里介绍第三方的集成缺比较详细的介绍，从而又找了上面那篇文章（<a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">WenBo丨星空灬</a>）主要用下面几个第三方的插件工具：</p><ul><li><strong>热度</strong>：<a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">LeanCloud</a></li><li><strong>评论</strong>：<a href="https://disqus.com/by/disqus_Ao1JdMliC8/" target="_blank" rel="noopener">Disqus</a></li></ul><p>第一篇文章也没啥好介绍的，最后再推荐两个之前同事的博客地址：</p><ul><li>架构大牛，<a href="https://zacard.net/" target="_blank" rel="noopener">Zacard’s Notes</a></li><li>算法大牛，<a href="http://www.iequa.com/" target="_blank" rel="noopener">Blair’s blog</a></li><li>DBA大牛，<a href="http://idber.github.io/" target="_blank" rel="noopener">似水年华–沉浮</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;扯扯&quot;&gt;&lt;a href=&quot;#扯扯&quot; class=&quot;headerlink&quot; title=&quot;扯扯&quot;&gt;&lt;/a&gt;扯扯&lt;/h2&gt;&lt;p&gt;弄Hexo博客好久，一开始为了折腾theme，看了不下几十个theme的风格，但后面弄了一个半成品放到了github上，结果在我后面重整的时候，一个rm -rf直接干掉了~ 正所谓，不破不立，就网上选取了一篇非常详细的文章 &lt;a href=&quot;https://www.jianshu.com/p/9f0e90cc32c2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WenBo丨星空灬&lt;/a&gt;。十分感谢，让我坚定地走出了第一步。Anyway，on the way~~~&lt;/p&gt;
&lt;p&gt;这篇正如我标题一样，first page，但作为一个码农，怎能去除Hello World的介绍，因此我也就保留了下来，也不让我这&lt;strong&gt;“first page”&lt;/strong&gt;如此的孤单。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://bigmin.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://bigmin.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
